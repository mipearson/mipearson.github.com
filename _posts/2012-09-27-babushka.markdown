---
layout: post
title: "Babushka, Day One"
date: 2012-09-27 22:28
comments: true
categories:
---

[BikeExchange](http://www.bikeexchange.com.au) are moving from a Ubuntu 10.04 virtual machine to a Ubuntu 12.04 bare metal behemoth. We have existing chef cookbooks that would make this easier, but:

  * I'm the only person in the organisation who knows how they work
  * We use maybe 25% of [chef](http://www.opscode.com/chef/) and the other 75% gets in the way
  * I need to rewrite big chunks from scratch to properly support [TiniTrader](http://www.tinitrader.com.au)

A discussion about [ansible](http://ansible.cc/) on [#roro](http://freenode.net/) today led me to think about giving that a try instead. Simple YAML files! No daemons! No fucking [keysigning](http://projects.puppetlabs.com/projects/1/wiki/certificates_and_security)! Party time!

Then, [Andy Snow](https://twitter.com/andy_snow) said (I'm paraphrasing) "You're a pussy, you should give [babushka](http://babushka.me) a go instead."

So that this knowledge isn't lost, and as the babushka documention is pretty mixed (think Rails 3 before all the [guides](http://guides.rubyonrails.org) got re-written), I'm documenting my experiences converting our chef cookbooks from scratch.

## Bootstrapping Vagrant

[Vagrant](http://vagrantup.com) doesn't support babushka out of the box, like puppet or chef. I prefer that: while I'm creating these things I like to work with them live rather than have vagrant do the heavy lifting for me.

My first step was to update [VirtualBox](https://www.virtualbox.org) and vagrant. Easy.

I grabbed an official [Ubuntu 12.04 Precise Pangolin 64-bit image](https://github.com/mitchellh/vagrant/wiki/Available-Vagrant-Boxes).

Installed babushka, following Ben's [instructions](http://babushka.me/installing):

``` shell
vagrant ssh
sudo apt-get install curl
sudo bash -c "`curl https://babushka.me/up`"
exit
```

I'll be working on my babushka configuration right in my repository, so I set up a symlink between that and where babushka expects to find its configuration:

``` shell
vagrant ssh
sudo bash
cd /root/.babushka
ln -si /vagrant/babushka-deps/ deps
```

So that I didn't need to repeat these steps if I wanted to start from a 'fresh' machine, I packaged what I had as a new vagrant box:

``` shell
vagrant package
vagrant box add precise64-babushka package.box
# edit Vagrantfile, replace box with precise64-babushka
rm package.box # (don't need it no more)
vagrant destroy # (as above)
vagrant up
```

### Proof of Concept Babushka Dep

Babushka works on a concept of 'deps'. You specify a condition and how to meet that condition. It's got more in common with puppet than chef, and more in common with TDD than both of those.

The very first step in our chef configuration is to lock the timezone to UTC. Let's try writing a dep that does just that:

``` ruby
dep "timezone set" do
  met? { shell("date +%Z") == "UTC" }
end
```

And run it:

``` shell
root@precise64:/root/.babushka/deps# babushka 'personal:timezone set to UTC'
timezone set to UTC {
} ✓ timezone set to UTC
```

Looks like this box is already already UTC! Okay, let's paramaterize it and use EST:

``` ruby
dep "timezone set", :timezone do
  met? { shell("date +%Z") == timezone }
end
```

Much better:

``` shell
root@precise64:/root/.babushka/deps# babushka 'personal:timezone set' timezone=EST
timezone set {
  meet {
  }
} ✗ timezone set
You can view a more detailed log at '/root/.babushka/logs/timezone set'.

root@precise64:/root/.babushka/deps# babushka 'personal:timezone set' timezone=UTC
timezone set {
} ✓ timezone set
```

Finally, we'll grab the commands from our chef config and set the timezone:

``` ruby
dep "timezone set", :timezone do
  met? { shell("date +%Z") == timezone }
  meet {
    '/etc/timezone'.p.write(timezone)
    shell "dpkg-reconfigure --frontend noninteractive tzdata"
  }
end
```

``` shell
root@precise64:/root/.babushka/deps# babushka 'personal:timezone set' timezone=EST
timezone set {
  meet {
  }
} ✓ timezone set

root@precise64:/root/.babushka/deps# date
Thu Sep 27 06:59:47 EST 2012
```

## Additional Resources

I found the following helpful:

  * [Babushka at GitHub](https://github.com/benhoskings/babushka)
  * [How Deps Work](http://babushka.me/how-deps-work), [Writing Deps](http://babushka.me/writing-deps), [Dep Examples](http://babushka.me/dep-examples)
  * [The Conversation's Deps](https://github.com/conversation/babushka-deps)
